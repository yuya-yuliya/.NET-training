@model WebPL.Models.TransferModel

@{
    ViewBag.Title = "Transfer to account";
}

<div class="jumbotron">
    <h1>Transfer to account</h1>
</div>

@using (Html.BeginForm("Transfer", "AccountWork", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.FromAccountNo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FromAccountNo, new { htmlAttributes = new { @class = "form-control-plaintext", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.FromAccountNo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ToAccountNo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ToAccountNo, Model.Accounts, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ToAccountNo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Transfer" class="btn btn-success" />
            </div>
        </div>
    </div>
}

<div>
    <hr />
    @Html.ActionLink("Back", "Index", new { id = Model.FromAccountNo }, new { @class = "btn btn-outline-primary" })
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
