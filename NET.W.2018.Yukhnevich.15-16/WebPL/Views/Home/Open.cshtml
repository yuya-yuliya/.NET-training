@model WebPL.Models.AccountModel

@{
    ViewBag.Title = "Open account";
}

<div class="jumbotron">
    <h1>Open account</h1>
</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.OwnerName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OwnerName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OwnerName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OwnerSurname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OwnerSurname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OwnerSurname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.Type, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-success" />
            </div>
        </div>
    </div>
}

@if (ViewBag.Alert != null)
{
    <div class="alert alert-danger" role="alert">
        <h4 class="alert-heading">@ViewBag.Alert</h4>
        <p>@ViewBag.AlertMessage</p>
    </div>
}

<div>
    <hr />
    @Html.ActionLink("Back", "Index", new { }, new { @class = "btn btn-outline-primary" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
